version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: baileys-kitchen-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: baileys_kitchen
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_MULTIPLE_DATABASES: "baileys_kitchen,user_service"
    ports:
      - "5432:5432"
    volumes:
      - baileys_postgres_data:/var/lib/postgresql/data
      - baileys_postgres_backup:/var/lib/postgresql/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d baileys_kitchen"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./apps/api-server
      dockerfile: Dockerfile
    container_name: baileys-kitchen-api
    environment:
      NODE_ENV: development
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: baileys_kitchen
      DB_SYNCHRONIZE: "true"
      DB_LOGGING: "true"
      API_PREFIX: /api/v1
      CORS_ORIGIN: http://localhost:3000,http://web-client:3000
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api-server:/app
      - /app/node_modules

  web-client:
    build:
      context: ./apps/web-client
      dockerfile: Dockerfile
    container_name: baileys-kitchen-web-client
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web-client:/app
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  user-service:
    build:
      context: ./apps/user-service
      dockerfile: Dockerfile
    container_name: baileys-kitchen-user-service
    environment:
      NODE_ENV: development
      PORT: 5002
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: user_service
      DB_SYNCHRONIZE: "true"
      DB_LOGGING: "true"
      API_PREFIX: api/v1
      CORS_ORIGIN: http://localhost:3000,http://web-client:3000
      JWT_SECRET: your-super-secret-jwt-key-that-should-be-long-and-secure
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN_DAYS: 30
    ports:
      - "5002:5002"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/user-service:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:5002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  baileys_postgres_data:
    name: baileys_postgres_data
    external: true
  baileys_postgres_backup:
    name: baileys_postgres_backup

networks:
  default:
    name: baileys-kitchen-network
